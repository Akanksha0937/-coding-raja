# -*- coding: utf-8 -*-
"""Task 1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/gist/Akanksha0937/af4ec2dd3b52ed5a43ef661575e45937/untitled0.ipynb
"""

# Function to add a task
def add_task(tasks, description, priority, due_date):
    task = {
        'description': description,
        'priority': priority,
        'due_date': due_date,
        'completed': False
    }
    tasks.append(task)
    save_tasks(tasks)
    print(f"Task added: {description}")

# Function to remove a task
def remove_task(tasks, index):
    if index < 0 or index >= len(tasks):
        print("Invalid task number.")
        return
    removed_task = tasks.pop(index)
    save_tasks(tasks)
    print(f"Task removed: {removed_task['description']}")

# Function to mark a task as completed
def complete_task(tasks, index):
    if index < 0 or index >= len(tasks):
        print("Invalid task number.")
        return
    tasks[index]['completed'] = True
    save_tasks(tasks)
    print(f"Task marked as completed: {tasks[index]['description']}")

# Function to display tasks
def display_tasks(tasks):
    if not tasks:
        print("No tasks found.")
    else:
        print("Tasks:")
        for i, task in enumerate(tasks):
            status = "Done" if task['completed'] else "Not Done"
            print(f"{i + 1}. {task['description']} (Priority: {task['priority']}, Due Date: {task['due_date']}, Status: {status})")

# Function to load tasks from a JSON file
def load_tasks():
    if os.path.exists('tasks.json'):
        with open('tasks.json', 'r') as file:
            return json.load(file)
    else:
        return []



